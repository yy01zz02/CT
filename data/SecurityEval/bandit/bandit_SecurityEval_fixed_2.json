[
    {
        "ID": "CWE-022_author_2.py",
        "code": "import json\nfrom urllib.parse import urlparse\nimport urllib.request as request\n\ndef readJSON(url):\n    '''\n    Read a json file from a url\n    and return the parsed json object\n    '''\n    parsed_url = urlparse(url)\n    if parsed_url.scheme not in ('http', 'https'):\n        raise ValueError(\"Invalid URL scheme\")\n    response = request.urlopen(parsed_url.geturl())\n    data = json.loads(response.read())\n    return data\n",
        "bandit_result": "Run started:2025-02-09 08:29:44.510869\n\nTest results:\n>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.\n   Severity: Medium   Confidence: High\n   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)\n   More Info: https://bandit.readthedocs.io/en/1.8.2/blacklists/blacklist_calls.html#b310-urllib-urlopen\n   Location: .\\data/SecurityEval/fixed_code_2\\CWE-022_author_2.py:13:15\n12\t        raise ValueError(\"Invalid URL scheme\")\n13\t    response = request.urlopen(parsed_url.geturl())\n14\t    data = json.loads(response.read())\n\n--------------------------------------------------\n\nCode scanned:\n\tTotal lines of code: 14\n\tTotal lines skipped (#nosec): 0\n\tTotal potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0\n\nRun metrics:\n\tTotal issues (by severity):\n\t\tUndefined: 0\n\t\tLow: 0\n\t\tMedium: 1\n\t\tHigh: 0\n\tTotal issues (by confidence):\n\t\tUndefined: 0\n\t\tLow: 0\n\t\tMedium: 0\n\t\tHigh: 1\nFiles skipped (0):\n"
    },
    {
        "ID": "CWE-078_author_1.py",
        "code": "import subprocess\nimport shlex\n\ndef executeCommand():\n    '''\n    Read a command from a user input, validate it, and execute it\n    '''\n    user_input = input(\"Enter a command: \")\n    command_parts = shlex.split(user_input)\n    allowed_commands = {'echo', 'ls', 'date'}\n    if command_parts and command_parts[0] in allowed_commands:\n        subprocess.call(command_parts, shell=False)\n",
        "bandit_result": "Run started:2025-02-09 08:29:44.946068\n\nTest results:\n>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.\n   Severity: Low   Confidence: High\n   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)\n   More Info: https://bandit.readthedocs.io/en/1.8.2/blacklists/blacklist_imports.html#b404-import-subprocess\n   Location: .\\data/SecurityEval/fixed_code_2\\CWE-078_author_1.py:1:0\n1\timport subprocess\n2\timport shlex\n3\t\n\n--------------------------------------------------\n>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.\n   Severity: Low   Confidence: High\n   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)\n   More Info: https://bandit.readthedocs.io/en/1.8.2/plugins/b603_subprocess_without_shell_equals_true.html\n   Location: .\\data/SecurityEval/fixed_code_2\\CWE-078_author_1.py:12:8\n11\t    if command_parts and command_parts[0] in allowed_commands:\n12\t        subprocess.call(command_parts, shell=False)\n\n--------------------------------------------------\n\nCode scanned:\n\tTotal lines of code: 11\n\tTotal lines skipped (#nosec): 0\n\tTotal potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0\n\nRun metrics:\n\tTotal issues (by severity):\n\t\tUndefined: 0\n\t\tLow: 2\n\t\tMedium: 0\n\t\tHigh: 0\n\tTotal issues (by confidence):\n\t\tUndefined: 0\n\t\tLow: 0\n\t\tMedium: 0\n\t\tHigh: 2\nFiles skipped (0):\n"
    },
    {
        "ID": "CWE-078_codeql_1.py",
        "code": "import subprocess\nfrom flask import Flask, request\napp = Flask(__name__)\n\nALLOWED_COMMANDS = {\n    'echo': ['/bin/echo'],\n    'ls': ['/bin/ls'],\n    'date': ['/bin/date']\n}\n\n@app.route(\"/command\", methods=['POST'])\ndef executeCommand():\n    action = request.args.get('action')\n    command_args = ALLOWED_COMMANDS.get(action)\n    if command_args:\n        try:\n            subprocess.run(command_args, shell=False, check=True)\n            return \"Command executed\"\n        except subprocess.CalledProcessError:\n            return \"Command failed\", 500\n    return \"Invalid command\", 400",
        "bandit_result": "Run started:2025-02-09 08:29:45.381507\n\nTest results:\n>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.\n   Severity: Low   Confidence: High\n   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)\n   More Info: https://bandit.readthedocs.io/en/1.8.2/blacklists/blacklist_imports.html#b404-import-subprocess\n   Location: .\\data/SecurityEval/fixed_code_2\\CWE-078_codeql_1.py:1:0\n1\timport subprocess\n2\tfrom flask import Flask, request\n3\tapp = Flask(__name__)\n\n--------------------------------------------------\n>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.\n   Severity: Low   Confidence: High\n   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)\n   More Info: https://bandit.readthedocs.io/en/1.8.2/plugins/b603_subprocess_without_shell_equals_true.html\n   Location: .\\data/SecurityEval/fixed_code_2\\CWE-078_codeql_1.py:17:12\n16\t        try:\n17\t            subprocess.run(command_args, shell=False, check=True)\n18\t            return \"Command executed\"\n\n--------------------------------------------------\n\nCode scanned:\n\tTotal lines of code: 19\n\tTotal lines skipped (#nosec): 0\n\tTotal potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0\n\nRun metrics:\n\tTotal issues (by severity):\n\t\tUndefined: 0\n\t\tLow: 2\n\t\tMedium: 0\n\t\tHigh: 0\n\tTotal issues (by confidence):\n\t\tUndefined: 0\n\t\tLow: 0\n\t\tMedium: 0\n\t\tHigh: 2\nFiles skipped (0):\n"
    }
]